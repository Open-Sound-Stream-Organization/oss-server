# Generated by Django 3.0.5 on 2020-04-09 23:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import repertoire.models
import tastypie.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('repertoire', '0005_playlist_name'),
    ]

    operations = [
        migrations.AlterField(
            model_name='album',
            name='artist',
            field=models.ManyToManyField(to='repertoire.Artist', verbose_name='Album Artist(s)'),
        ),
        migrations.AlterField(
            model_name='album',
            name='cover_file',
            field=models.ImageField(blank=True, null=True, upload_to='', verbose_name='Custom Cover-Image'),
        ),
        migrations.AlterField(
            model_name='album',
            name='cover_url',
            field=models.CharField(blank=True, max_length=1024, null=True, verbose_name='Url of Cover-Image'),
        ),
        migrations.AlterField(
            model_name='album',
            name='mbid',
            field=models.CharField(blank=True, max_length=64, null=True, verbose_name='Musicbrainz ID'),
        ),
        migrations.AlterField(
            model_name='album',
            name='name',
            field=models.TextField(verbose_name='Album Name'),
        ),
        migrations.AlterField(
            model_name='album',
            name='release',
            field=models.DateField(blank=True, verbose_name='First release of Album'),
        ),
        migrations.AlterField(
            model_name='album',
            name='tags',
            field=models.ManyToManyField(blank=True, to='repertoire.Tag'),
        ),
        migrations.AlterField(
            model_name='area',
            name='mbid',
            field=models.CharField(max_length=64, verbose_name='Musicbrainz ID'),
        ),
        migrations.AlterField(
            model_name='area',
            name='name',
            field=models.CharField(max_length=512, verbose_name='Area Name'),
        ),
        migrations.AlterField(
            model_name='area',
            name='type',
            field=models.CharField(choices=[('X', 'Country'), ('L', 'Subdivision'), ('C', 'County'), ('M', 'Municipality'), ('S', 'City'), ('D', 'District'), ('I', 'Island')], max_length=2, verbose_name='Area Type'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='repertoire.Area', verbose_name='Area of Artist'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='mbid',
            field=models.CharField(blank=True, max_length=64, verbose_name='Musicbrainz ID'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='name',
            field=models.CharField(max_length=512, verbose_name='Name of Artist'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='tags',
            field=models.ManyToManyField(blank=True, to='repertoire.Tag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='artist',
            name='type',
            field=models.CharField(choices=[('P', 'Person'), ('G', 'Group'), ('O', 'Orchestra'), ('C', 'Choir'), ('F', 'Character'), ('O', 'Other')], max_length=1, verbose_name='Type of Artist (Person/Group/etc.)'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='name',
            field=models.CharField(max_length=512, verbose_name='Name of Playlist'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='tags',
            field=models.ManyToManyField(blank=True, to='repertoire.Tag'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='tracks',
            field=models.ManyToManyField(through='repertoire.TrackInPlaylist', to='repertoire.Track', verbose_name='Tracks in Playlist'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(max_length=1024, verbose_name='Tag name'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Tag belongs to User'),
        ),
        migrations.AlterField(
            model_name='track',
            name='album',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repertoire.Album', verbose_name='Track in Album'),
        ),
        migrations.AlterField(
            model_name='track',
            name='artist',
            field=models.ManyToManyField(to='repertoire.Artist', verbose_name='From Artist'),
        ),
        migrations.AlterField(
            model_name='track',
            name='audio',
            field=models.FileField(blank=True, help_text='Allowed type - .mp3, .wav, .ogg', upload_to=repertoire.models.audio_path, verbose_name='Audio File'),
        ),
        migrations.AlterField(
            model_name='track',
            name='mbid',
            field=models.CharField(blank=True, max_length=64, null=True, verbose_name='Musicbrainz ID'),
        ),
        migrations.AlterField(
            model_name='track',
            name='tags',
            field=models.ManyToManyField(blank=True, to='repertoire.Tag'),
        ),
        migrations.AlterField(
            model_name='track',
            name='title',
            field=models.CharField(max_length=512, verbose_name='Track Title'),
        ),
        migrations.AlterField(
            model_name='trackinplaylist',
            name='sort_number',
            field=models.IntegerField(verbose_name='Arbitrary Sort Number'),
        ),
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, db_index=True, default='', max_length=128)),
                ('created', models.DateTimeField(default=tastypie.utils.timezone.now)),
                ('purpose', models.CharField(help_text='Describes where the API-Key is intended to be used', max_length=1024)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='api_key', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
